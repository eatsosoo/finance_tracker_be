generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  email      String     @unique
  roles      Role[]     @relation("UserRoles")
  accounts   Account[]
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  permissions Permission[] @relation("RolePermissions")
  users       User[]       @relation("UserRoles")
}

model Permission {
  id    Int    @id @default(autoincrement())
  name  String @unique
  roles Role[] @relation("RolePermissions")
}

model Account {
  id           Int           @id @default(autoincrement())
  name         String
  balance      Float         @default(0)
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Category {
  id           Int           @id @default(autoincrement())
  title        String
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id         Int      @id @default(autoincrement())
  type       String
  amount     Float
  note       String?
  accountId  Int
  account    Account  @relation(fields: [accountId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
